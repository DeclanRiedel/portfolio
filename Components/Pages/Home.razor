@page "/"
@inject IJSRuntime JS

<PageTitle>Declan Riedel - Software Engineer</PageTitle>

<div class="content-wrapper">
    <div class="hero-section">
        <img src="images/background.png" class="background-image" alt="Background" id="background-image" />

        <div class="greeting">
            <MudText Typo="Typo.h3" Class="greeting-text">
                Hi, I'm <span class="highlight">Declan</span> 👋<br />
                I Design, Build & Maintain Business Software<br />
                for <span class="highlight">Namibian Enterprises</span>.
            </MudText>
        </div>

        <div class="nav-links">
            <MudStack Spacing="8">
                <MudButton Class="custom-nav-button" OnClick="@(() => ScrollToSection("about"))">
                    All About Me <MudIcon Icon="@Icons.Material.Filled.ArrowDownward" />
                </MudButton>
                <MudButton Class="custom-nav-button" OnClick="@(() => ScrollToSection("skills"))">
                    Developer Skills <MudIcon Icon="@Icons.Material.Filled.ArrowDownward" />
                </MudButton>
                <MudButton Class="custom-nav-button" OnClick="@(() => ScrollToSection("projects"))">
                    Personal Projects <MudIcon Icon="@Icons.Material.Filled.ArrowDownward" />
                </MudButton>
            </MudStack>
        </div>
    </div>

    <div class="sections-container">
        <div id="about" class="about-section">
            <h2 class="section-title">About Me</h2>
            <MudText Align="Align.Center" Class="about-text">
                This is some filler content for the About Me section. You can replace this with your actual information.
            </MudText>
        </div>

        <div id="skills" class="skills-section">
            <h2 class="section-title">Skills</h2>
            <MudText Align="Align.Center" Class="skills-text mb-4">
                I specialize in developing <span class="highlight">.NET</span> applications, 
                working with <span class="highlight">PostgreSQL</span> databases, 
                and managing <span class="highlight">Linux</span> & <span class="highlight">NixOS</span> systems. 
                Additionally, I have foundational knowledge in <span class="highlight">Go</span>, 
                <span class="highlight">JavaScript</span>, and <span class="highlight">C++</span>.
            </MudText>
            <div class="white-line mb-4"></div>
            <MudGrid Justify="Justify.Center" Spacing="2">
                @foreach (var skill in skills)
                {
                    <MudItem xs="6" sm="4" md="3" lg="2">
                        <MudCard Elevation="2" Class="@($"skill-card {skill.Class}")">
                            <MudCardContent>
                                <MudText Typo="Typo.h6" Align="Align.Center">@skill.Name</MudText>
                                <MudText Typo="Typo.body2" Align="Align.Center">@skill.ExperienceLevel</MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
            </MudGrid>
        </div>

        <div id="projects" class="projects-section">
            <h2 class="section-title">Projects</h2>
            <MudGrid>
                @foreach (var project in visibleProjects)
                {
                    <MudItem xs="12" sm="6" md="4">
                        <MudCard Elevation="4" Class="project-card">
                            <MudCardMedia Image="@project.ImageUrl" Height="200" />
                            <MudCardHeader>
                                <MudText Typo="Typo.h5" Class="project-title">@project.Title</MudText>
                            </MudCardHeader>
                            <MudCardContent Class="project-description">
                                <MudText>@((MarkupString)project.Description)</MudText>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton Variant="Variant.Text" Color="Color.Primary" Href="@project.GitHubUrl" Target="_blank">View on GitHub</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                }
            </MudGrid>
            
            @if (projects.Count > 6)
            {
                <div class="d-flex justify-center mt-4">
                    @if (visibleProjects.Count < projects.Count)
                    {
                        <MudButton Class="custom-nav-button mr-2" OnClick="LoadMoreProjects">
                            Load More <MudIcon Icon="@Icons.Material.Filled.ExpandMore" />
                        </MudButton>
                    }
                    @if (visibleProjects.Count > 6)
                    {
                        <MudButton Class="custom-nav-button" OnClick="UnloadProjects">
                            Show Less <MudIcon Icon="@Icons.Material.Filled.ExpandLess" />
                        </MudButton>
                    }
                </div>
            }
        </div>
    </div>
</div>

<style>
    .content-wrapper {
        min-height: 200vh;
    }

    .hero-section {
        height: 100vh;
        position: relative;
        overflow: hidden;
    }

    .background-image {
        position: absolute;
        right: 1%;
        top: 45%;
        transform: translateY(-50%);
        max-width: 50vw;
        max-height: 66vh;
        object-fit: contain;
        object-position: right center;
        z-index: 0;
        transition: transform 0.1s ease-out;
    }

    .sections-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .skills-section, .projects-section, .about-section {
        padding: 5rem 0;
        color: white;
    }

    .nav-links {
        position: absolute;
        left: 12%;
        top: 50%;
        transform: translateY(-50%);
        z-index: 1;
    }

    .custom-nav-button {
        color: white;
        background-color: transparent;
        border: none;
        transition: all 0.3s ease;
        font-size: 2rem;
        font-weight: bold;
        text-transform: none;
        justify-content: flex-start;
        padding: 0;
        box-shadow: none;
    }

    .custom-nav-button:hover {
        color: #FFA07A;
        transform: translateX(20px);
        background-color: transparent;
    }

    .project-card {
        background-color: rgba(30, 30, 30, 0.8);
        color: white;
        transition: all 0.3s ease;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .project-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 20px rgba(255, 160, 122, 0.4);
    }

    .skills-text {
        font-size: 1.2rem;
        line-height: 1.6;
        text-align: center;
        max-width: 800px;
        margin: 0 auto;
    }

    .highlight {
        color: #FFA07A;
    }

    .white-line {
        height: 2px;
        background-color: white;
        width: 100%;
        margin: 1rem 0;
    }

    .skill-card {
        cursor: pointer;
        transition: transform 0.2s;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .skill-card .mud-card-content {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .skill-card:hover {
        transform: translateY(-5px);
    }

    .greeting {
        position: absolute;
        left: 12%;
        top: 1%;
        z-index: 1;
    }

    .greeting-text {
        color: white;
        font-weight: bold;
        font-size: 2.5rem;
    }

    .section-title {
        text-align: center;
        position: relative;
        display: inline-block;
        padding-bottom: 15px;
        margin-bottom: 3rem;
        left: 50%;
        transform: translateX(-50%);
        font-size: 2.5rem;
        font-weight: bold;
    }

    .section-title::after {
        content: '';
        position: absolute;
        left: 50%;
        bottom: 0;
        width: 120%;
        height: 3px;
        background-color: currentColor;
        transform: translateX(-50%);
    }

    .project-title {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .project-description {
        flex-grow: 1;
        overflow: hidden;
    }

    .csharp { background-color: #178600; color: white; }
    .js { background-color: #F0DB4F; color: black; }
    .dotnet { background-color: #512BD4; color: white; }
    .postgresql { background-color: #336791; color: white; }
    .linux { background-color: #FCC624; color: black; }
    .nix { background-color: #5277C3; color: white; }
    .go { background-color: #00ADD8; color: white; }
    .htmx { background-color: #3366cc; color: white; }
    .cpp { background-color: #00599C; color: white; }
</style>

@code {
    public class Project
    {
        public string Title { get; set; }
        public string Description { get; set; }
        public string ImageUrl { get; set; }
        public string GitHubUrl { get; set; }
    }

    private List<Project> projects = new List<Project>
    {
        new Project {
            Title = "Container Inspection App",
            Description = "A mobile application for container inspections, built with .NET MAUI.",
            ImageUrl = "images/container-inspection-app.png",
            GitHubUrl = "https://github.com/declanriedel/containerinspectionapp"
        },
        new Project {
            Title = "Ncurses Chrome Dino Game",
            Description = "A terminal-based recreation of the Chrome Dino game using Ncurses.",
            ImageUrl = "images/ncurses-dino-game.png",
            GitHubUrl = "https://github.com/declanriedel/ncurses_dinorunner"
        },
        new Project {
            Title = "Web Terminal Emulator",
            Description = "Fake terminal emulator made with Blazor.",
            ImageUrl = "images/web-terminal-emulator.png",
            GitHubUrl = "https://github.com/yourusername/web-terminal-emulator"
        },
        new Project { Title = "Project 4", Description = "Description of Project 4" },
        new Project { Title = "Project 5", Description = "Description of Project 5" },
        new Project { Title = "Project 6", Description = "Description of Project 6" },
        new Project { Title = "Project 7", Description = "Description of Project 7" },
        new Project { Title = "Project 8", Description = "Description of Project 8" },
        new Project { Title = "Project 9", Description = "Description of Project 9" },
    };

    private List<Project> visibleProjects;

    protected override void OnInitialized()
    {
        visibleProjects = projects.Take(6).ToList();
    }

    private void LoadMoreProjects()
    {
        int currentCount = visibleProjects.Count;
        visibleProjects = projects.Take(Math.Min(currentCount + 3, projects.Count)).ToList();
    }

    private void UnloadProjects()
    {
        visibleProjects = projects.Take(6).ToList();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("addMouseMoveListener", "#background-image");
            await JS.InvokeVoidAsync("scrollToTop");
        }
    }

    private async Task ScrollToSection(string sectionId)
    {
        await JS.InvokeVoidAsync("smoothScrollTo", sectionId);
    }

    private List<Skill> skills = new List<Skill>
    {
        new Skill("C#", "csharp", "Experienced"),
        new Skill("JavaScript", "js", "Lighter"),
        new Skill(".NET", "dotnet", "Experienced"),
        new Skill("PostgreSQL", "postgresql", "Experienced"),
        new Skill("Linux", "linux", "Experienced"),
        new Skill("NixOS/Nix", "nix", "Experienced"),
        new Skill("Go", "go", "Lighter"),
        new Skill("HTMX", "htmx", "Lighter"),
        new Skill("C++", "cpp", "Lighter")
    };

    public class Skill
    {
        public string Name { get; set; }
        public string Class { get; set; }
        public string ExperienceLevel { get; set; }

        public Skill(string name, string cssClass, string experienceLevel)
        {
            Name = name;
            Class = cssClass;
            ExperienceLevel = experienceLevel;
        }
    }
}